{"version":3,"sources":["hooks/useForm.js","helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","Navbar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25574594.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    \n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n        \n\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n\n\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken( 'auth/renew' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name\n            }) )\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\n\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from '../../hooks/useForm';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    \n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'jndirazar@gmail.com',\n        lPassword: '123456'\n    });\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Nando',\n        rEmail: 'nando@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n    \n    const { lEmail, lPassword } = formLoginValues;\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = ( e ) => {\n        e.preventDefault();\n        dispatch( startLogin( lEmail, lPassword ) );\n    }\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n\n        if ( rPassword1 !== rPassword2 ) {\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','error');\n        }\n        console.log('?')\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\n    }\n\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n\n    const dispatch = useDispatch();\n    const { name } = useSelector( state => state.auth );\n\n    const handleLogout = () => {\n        dispatch( startLogout() );\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n            \n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n\n    const { title, user } = event;\n\n    return (\n        <div>\n            <strong> { title } </strong>\n            <span>- { user.name } </span>\n        </div>\n    )\n}\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport moment from 'moment';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\n\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n};\nModal.setAppElement('#root');\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); // 3:00:00\nconst nowPlus1 = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowPlus1.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const { modalOpen } = useSelector( state => state.ui );\n    const { activeEvent } = useSelector( state => state.calendar );\n    const dispatch = useDispatch();\n\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\n    const [ titleValid, setTitleValid ] = useState(true);\n    \n    const [formValues, setFormValues] = useState( initEvent );\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if ( activeEvent ) {\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n\n    const closeModal = () => {\n        // TODO: cerrar el modal\n        dispatch( uiCloseModal() );\n        dispatch( eventClearActiveEvent() );\n        setFormValues( initEvent );\n    }\n\n    const handleStartDateChange = ( e ) => {\n        setDateStart( e );\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n    \n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        \n        const momentStart = moment( start );\n        const momentEnd = moment( end );\n\n        if ( momentStart.isSameOrAfter( momentEnd ) ) {\n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 2 ) {\n            return setTitleValid(false);\n        }\n\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ) )\n        } else {\n            dispatch( eventStartAddNew(formValues) );\n        }\n\n\n        setTitleValid(true);\n        closeModal();\n        \n    }\n\n\n    return (\n        <Modal\n          isOpen={ modalOpen }\n          onRequestClose={ closeModal }\n          style={ customStyles }\n          closeTimeoutMS={ 200 }\n          className=\"modal\"\n          overlayClassName=\"modal-fondo\"\n        >\n            <h1> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h1>\n            <hr />\n            <form \n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' } `}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleClickNew = () => {\n        dispatch( uiOpenModal() );\n    }\n\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={ handleClickNew }\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch( eventStartDelete() );\n    }\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment';\n\nimport { Navbar } from '../ui/NavBar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport { uiOpenModal } from '../../actions/ui';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { eventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector( state => state.calendar );\n    const { uid } = useSelector( state => state.auth );\n\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\n\n    useEffect(() => {\n        \n        dispatch( eventStartLoading() );\n\n    }, [ dispatch ])\n\n\n    const onDoubleClick = (e) => {\n        // console.log(e);\n        dispatch( uiOpenModal() );\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch( eventSetActive( e ) );\n    }\n\n    const onViewChange = (e) => {\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        // console.log(e)\n        dispatch( eventClearActiveEvent() );\n    }\n\n\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\n\n        const style = {\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n\n\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            \n\n            <Calendar\n                localizer={ localizer }\n                events={ events }\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n\n\n            <AddNewFab />\n\n\n            {\n                (activeEvent) && <DeleteEventFab />\n            }\n            \n\n            <CalendarModal />\n\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from 'react-router-dom';\n  \nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    const { checking, uid } = useSelector( state => state.auth);\n\n    useEffect(() => {\n        \n        dispatch( startChecking() );\n\n    }, [dispatch])\n\n    if ( checking ) {\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreen }\n                        isAuthenticated={ !!uid }\n                    />\n\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />   \n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n// {\n//     id: 'askdjhaksdjas',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n\n\n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport { rootReducer } from '../reducers/rootReducer';\n\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware( thunk )\n    )\n);\n\n\n","import React from 'react'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store';\r\nimport { Provider } from 'react-redux'\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <>\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n        </>\r\n    )  \r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './style.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}